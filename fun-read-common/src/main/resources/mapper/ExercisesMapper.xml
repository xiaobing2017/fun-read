<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bing.funread.common.mapper.ExercisesMapper" >
  <resultMap id="BaseResultMap" type="com.bing.funread.common.domain.Exercises" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="poetry_id" property="poetryId" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="audio_url" property="audioUrl" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, poetry_id, title, audio_url, answer, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from exercises
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from exercises
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bing.funread.common.domain.Exercises" >
    insert into exercises (id, poetry_id, title, 
      audio_url, answer, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{poetryId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{audioUrl,jdbcType=VARCHAR}, #{answer,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bing.funread.common.domain.Exercises" >
    insert into exercises
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="poetryId != null" >
        poetry_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="audioUrl != null" >
        audio_url,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="poetryId != null" >
        #{poetryId,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="audioUrl != null" >
        #{audioUrl,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bing.funread.common.domain.Exercises" >
    update exercises
    <set >
      <if test="poetryId != null" >
        poetry_id = #{poetryId,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="audioUrl != null" >
        audio_url = #{audioUrl,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bing.funread.common.domain.Exercises" >
    update exercises
    set poetry_id = #{poetryId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      audio_url = #{audioUrl,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
    order by id
  </update>

  <select id="selectByPoetryId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from exercises
    where poetry_id = #{poetryId,jdbcType=BIGINT}
  </select>
  <select id="selectCourseExercises" resultType="java.lang.Long" parameterType="java.lang.Long" >
    select e.id
    from exercises e
    inner join course_poetry cp on cp.poetry_id = e.poetry_id
    where course_id = #{courseId,jdbcType=BIGINT}
  </select>
  <select id="selectByExercisesIdList" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from exercises
    where id in
    <foreach collection="exercisesIdList" item="exercisesId" index="index"
             open="(" close=")" separator=",">
      #{exercisesId}
    </foreach>
  </select>
</mapper>