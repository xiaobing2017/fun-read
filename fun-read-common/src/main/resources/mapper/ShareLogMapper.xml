<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bing.funread.common.mapper.ShareLogMapper" >
  <resultMap id="BaseResultMap" type="com.bing.funread.common.domain.ShareLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="unique_id" property="uniqueId" jdbcType="VARCHAR" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
    <result column="study_days" property="studyDays" jdbcType="INTEGER" />
    <result column="study_poetrys" property="studyPoetrys" jdbcType="INTEGER" />
    <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="poetry_id" property="poetryId" jdbcType="BIGINT" />
    <result column="ca_id" property="caId" jdbcType="BIGINT" />
    <result column="is_skip" property="isSkip" jdbcType="CHAR" />
    <result column="from_where" property="fromWhere" jdbcType="CHAR" />
    <result column="poetry_name" property="poetryName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, unique_id, user_code, study_days, study_poetrys, avatar_url, nick_name, poetry_id, 
    ca_id, is_skip, from_where, poetry_name, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from share_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from share_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bing.funread.common.domain.ShareLog" >
    insert into share_log (id, unique_id, user_code, 
      study_days, study_poetrys, avatar_url, 
      nick_name, poetry_id, ca_id, 
      is_skip, from_where, poetry_name, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{uniqueId,jdbcType=VARCHAR}, #{userCode,jdbcType=VARCHAR}, 
      #{studyDays,jdbcType=INTEGER}, #{studyPoetrys,jdbcType=INTEGER}, #{avatarUrl,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{poetryId,jdbcType=BIGINT}, #{caId,jdbcType=BIGINT}, 
      #{isSkip,jdbcType=CHAR}, #{fromWhere,jdbcType=CHAR}, #{poetryName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bing.funread.common.domain.ShareLog" >
    insert into share_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uniqueId != null" >
        unique_id,
      </if>
      <if test="userCode != null" >
        user_code,
      </if>
      <if test="studyDays != null" >
        study_days,
      </if>
      <if test="studyPoetrys != null" >
        study_poetrys,
      </if>
      <if test="avatarUrl != null" >
        avatar_url,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="poetryId != null" >
        poetry_id,
      </if>
      <if test="caId != null" >
        ca_id,
      </if>
      <if test="isSkip != null" >
        is_skip,
      </if>
      <if test="fromWhere != null" >
        from_where,
      </if>
      <if test="poetryName != null" >
        poetry_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="uniqueId != null" >
        #{uniqueId,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null" >
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="studyDays != null" >
        #{studyDays,jdbcType=INTEGER},
      </if>
      <if test="studyPoetrys != null" >
        #{studyPoetrys,jdbcType=INTEGER},
      </if>
      <if test="avatarUrl != null" >
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="poetryId != null" >
        #{poetryId,jdbcType=BIGINT},
      </if>
      <if test="caId != null" >
        #{caId,jdbcType=BIGINT},
      </if>
      <if test="isSkip != null" >
        #{isSkip,jdbcType=CHAR},
      </if>
      <if test="fromWhere != null" >
        #{fromWhere,jdbcType=CHAR},
      </if>
      <if test="poetryName != null" >
        #{poetryName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bing.funread.common.domain.ShareLog" >
    update share_log
    <set >
      <if test="uniqueId != null" >
        unique_id = #{uniqueId,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null" >
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="studyDays != null" >
        study_days = #{studyDays,jdbcType=INTEGER},
      </if>
      <if test="studyPoetrys != null" >
        study_poetrys = #{studyPoetrys,jdbcType=INTEGER},
      </if>
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="poetryId != null" >
        poetry_id = #{poetryId,jdbcType=BIGINT},
      </if>
      <if test="caId != null" >
        ca_id = #{caId,jdbcType=BIGINT},
      </if>
      <if test="isSkip != null" >
        is_skip = #{isSkip,jdbcType=CHAR},
      </if>
      <if test="fromWhere != null" >
        from_where = #{fromWhere,jdbcType=CHAR},
      </if>
      <if test="poetryName != null" >
        poetry_name = #{poetryName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bing.funread.common.domain.ShareLog" >
    update share_log
    set unique_id = #{uniqueId,jdbcType=VARCHAR},
      user_code = #{userCode,jdbcType=VARCHAR},
      study_days = #{studyDays,jdbcType=INTEGER},
      study_poetrys = #{studyPoetrys,jdbcType=INTEGER},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      poetry_id = #{poetryId,jdbcType=BIGINT},
      ca_id = #{caId,jdbcType=BIGINT},
      is_skip = #{isSkip,jdbcType=CHAR},
      from_where = #{fromWhere,jdbcType=CHAR},
      poetry_name = #{poetryName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByUniqueId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from share_log
    where unique_id = #{uniqueId,jdbcType=BIGINT}
  </select>
</mapper>