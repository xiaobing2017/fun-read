<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bing.funread.common.mapper.UserActivityAudioMapper" >
  <resultMap id="BaseResultMap" type="com.bing.funread.common.domain.UserActivityAudio" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_activity_id" property="userActivityId" jdbcType="BIGINT" />
    <result column="poetry_id" property="poetryId" jdbcType="BIGINT" />
    <result column="poetry_info_id" property="poetryInfoId" jdbcType="BIGINT" />
    <result column="audio_url" property="audioUrl" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_activity_id, poetry_id, poetry_info_id, audio_url, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_activity_audio
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_activity_audio
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bing.funread.common.domain.UserActivityAudio" >
    insert into user_activity_audio (id, user_activity_id, poetry_id, 
      poetry_info_id, audio_url, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{userActivityId,jdbcType=BIGINT}, #{poetryId,jdbcType=BIGINT}, 
      #{poetryInfoId,jdbcType=BIGINT}, #{audioUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bing.funread.common.domain.UserActivityAudio" >
    insert into user_activity_audio
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userActivityId != null" >
        user_activity_id,
      </if>
      <if test="poetryId != null" >
        poetry_id,
      </if>
      <if test="poetryInfoId != null" >
        poetry_info_id,
      </if>
      <if test="audioUrl != null" >
        audio_url,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userActivityId != null" >
        #{userActivityId,jdbcType=BIGINT},
      </if>
      <if test="poetryId != null" >
        #{poetryId,jdbcType=BIGINT},
      </if>
      <if test="poetryInfoId != null" >
        #{poetryInfoId,jdbcType=BIGINT},
      </if>
      <if test="audioUrl != null" >
        #{audioUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bing.funread.common.domain.UserActivityAudio" >
    update user_activity_audio
    <set >
      <if test="userActivityId != null" >
        user_activity_id = #{userActivityId,jdbcType=BIGINT},
      </if>
      <if test="poetryId != null" >
        poetry_id = #{poetryId,jdbcType=BIGINT},
      </if>
      <if test="poetryInfoId != null" >
        poetry_info_id = #{poetryInfoId,jdbcType=BIGINT},
      </if>
      <if test="audioUrl != null" >
        audio_url = #{audioUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bing.funread.common.domain.UserActivityAudio" >
    update user_activity_audio
    set user_activity_id = #{userActivityId,jdbcType=BIGINT},
      poetry_id = #{poetryId,jdbcType=BIGINT},
      poetry_info_id = #{poetryInfoId,jdbcType=BIGINT},
      audio_url = #{audioUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="insertOrUpdateSelective" parameterType="com.bing.funread.common.domain.UserActivityAudio">
    insert into user_activity_audio (user_activity_id, poetry_id,
    poetry_info_id, audio_url)
    values (#{userActivityId,jdbcType=BIGINT}, #{poetryId,jdbcType=BIGINT},
    #{poetryInfoId,jdbcType=BIGINT}, #{audioUrl,jdbcType=VARCHAR})
    on duplicate key update audio_url = #{audioUrl,jdbcType=VARCHAR}
  </insert>
  <select id="selectLastedFinishedTime" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select uaa.*
    from user_activity_audio uaa
    inner join user_activity ua on uaa.user_activity_id = ua.id
      and ua.user_id = #{userId,jdbcType=BIGINT} and ua.activity_id = #{activityId,jdbcType=BIGINT}
    inner join
    (
      select poetry_id,count(1)
      from user_activity ua
      inner join user_activity_audio uaa on ua.id = uaa.user_activity_id
      where ua.user_id = #{userId,jdbcType=BIGINT} and ua.activity_id = #{activityId,jdbcType=BIGINT}
      group by poetry_id
      having count(1) = (select count(1) from poetry_info pif where pif.poetry_id = uaa.poetry_id)
    ) t on uaa.poetry_id = t.poetry_id
    order by id desc
    limit 1
  </select>
</mapper>