<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bing.funread.common.mapper.UserActivityMapper" >
  <resultMap id="BaseResultMap" type="com.bing.funread.common.domain.UserActivity" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="activity_id" property="activityId" jdbcType="BIGINT" />
    <result column="finished_num" property="finishedNum" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, activity_id, finished_num, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_activity
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_activity
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bing.funread.common.domain.UserActivity" >
    insert into user_activity (id, user_id, activity_id, 
      finished_num, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{activityId,jdbcType=BIGINT}, 
      #{finishedNum,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bing.funread.common.domain.UserActivity" >
    insert into user_activity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="activityId != null" >
        activity_id,
      </if>
      <if test="finishedNum != null" >
        finished_num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="activityId != null" >
        #{activityId,jdbcType=BIGINT},
      </if>
      <if test="finishedNum != null" >
        #{finishedNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bing.funread.common.domain.UserActivity" >
    update user_activity
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="activityId != null" >
        activity_id = #{activityId,jdbcType=BIGINT},
      </if>
      <if test="finishedNum != null" >
        finished_num = #{finishedNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bing.funread.common.domain.UserActivity" >
    update user_activity
    set user_id = #{userId,jdbcType=BIGINT},
      activity_id = #{activityId,jdbcType=BIGINT},
      finished_num = #{finishedNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectUserActivityInfo" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from user_activity
    where user_id = #{userId,jdbcType=BIGINT}
      and activity_id = #{activityId,jdbcType=BIGINT}
  </select>
  <update id="updateActivityFinishedNum" parameterType="java.lang.Long" >
    update user_activity t1,
    (
      select count(1) num
      from
      (
        select poetry_id,count(1)
        from user_activity ua
        inner join user_activity_audio uaa on ua.id = uaa.user_activity_id
        where ua.id = #{id,jdbcType=BIGINT}
        group by poetry_id
        having count(1) = (select count(1) from poetry_info pif where pif.poetry_id = uaa.poetry_id)
      ) t
    ) t2
    set t1.finished_num = t2.num
    where t1.id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="ActivityInfoDto" type="com.bing.funread.common.dto.ActivityInfoDto" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="banner_url" property="bannerUrl" jdbcType="VARCHAR" />
    <result column="poetry_num" property="poetryNum" jdbcType="INTEGER" />
    <result column="isJoin" property="isJoin" jdbcType="BOOLEAN" />
    <result column="finished_num" property="finishedNum" jdbcType="INTEGER" />
  </resultMap>
  <select id="selectActivityInfo" resultMap="ActivityInfoDto" parameterType="java.lang.Long" >
    select
    a.id,a.name,a.banner_url,a.poetry_num,finished_num,if(ua.id != null,true,false) isJoin
    from activity a
    left join user_activity ua on a.id = ua.activity_id
      and user_id = #{userId,jdbcType=BIGINT} and is_valid = '1'
    order by a.id
  </select>
  <select id="selectUserActivityId" resultType="java.lang.Long" parameterType="java.lang.Long" >
    select id
    from user_activity
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <insert id="insertIgnoreSelective" parameterType="com.bing.funread.common.domain.UserActivity" >
    insert ignore into user_activity (user_id, activity_id)
    values (#{userId,jdbcType=BIGINT}, #{activityId,jdbcType=BIGINT})
  </insert>
</mapper>